{"version":3,"sources":["components/Person.js","services/personService.js","components/Notification.js","App.js","index.js"],"names":["Person","props","person","name","number","id","onClick","deletePerson","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","className","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filter","setFilter","personsToShow","setPersonsToShow","setMessage","useEffect","personService","initialPersons","value","onChange","event","target","personsToShowCopy","i","length","personCopy","push","pers","toString","toUpperCase","startsWith","onSubmit","preventDefault","window","confirm","setTimeout","type","map","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d2fa8954.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Person = (props) => {\r\n    \r\n    return(\r\n    <li>\r\n        <span>{props.person.name}: {props.person.number}</span><button id='delete' onClick={props.deletePerson}>delete</button>\r\n    </li>\r\n)\r\n}\r\n\r\nexport default Person\r\n\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    \r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n\r\n}\r\n\r\nexport default {\r\n    getAll,\r\n    create,\r\n    update,\r\n    deletePerson\r\n}","import React from 'react'\r\n\r\nconst Notification = ({message}) => {\r\n\r\n    if(message === null){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"notification\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport './App.css';\r\nimport Person from './components/Person'\r\nimport personService from './services/personService'\r\nimport Notification from './components/Notification'\r\nimport './index.css'\r\n\r\nconst App = () => {\r\n\r\n  const [persons, setPersons] = useState([])\r\n\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [filter, setFilter] = useState('')\r\n  const [personsToShow, setPersonsToShow] = useState(persons)\r\n  const [message, setMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n\r\n    personService.getAll()\r\n         .then(initialPersons => {\r\n           setPersons(initialPersons)\r\n           setPersonsToShow(initialPersons)\r\n        \r\n  })\r\n  }, [])\r\n\r\n  const addPerson = (event) =>{\r\n\r\n    event.preventDefault()\r\n    const person = {\r\n      name: newName,\r\n      number: newNumber,\r\n      id:0\r\n    }\r\n\r\n    for (let i in persons){\r\n\r\n      if(person.name === persons[i].name){\r\n        if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)){\r\n          \r\n          person.id=persons[i].id\r\n\r\n          personService.update(person.id, person).then(()=>{\r\n          persons[i]=person\r\n          setPersons(persons)\r\n          setFilter('')\r\n          setNewName('')\r\n          setNewNumber('')\r\n          })\r\n\r\n          return\r\n\r\n        }\r\n        \r\n      }\r\n    }\r\n    //const newPersons=persons.concat(person)\r\n    personService.create(person).then(()=>{\r\n      \r\n      personService.getAll()\r\n         .then(initialPersons => {\r\n           setPersons(initialPersons)\r\n           setPersonsToShow(initialPersons)\r\n           setMessage(`${person.name} was added`)\r\n           setTimeout(() => {\r\n            setMessage(null)\r\n          }, 5000)\r\n        \r\n  })\r\n      setFilter('')\r\n      setNewName('')\r\n      setNewNumber('')\r\n    })\r\n    \r\n  }\r\n\r\n\r\n\r\n\r\n  const deletePersonOf = (id, name) => {\r\n    \r\n    if(!window.confirm(`Delete ${name}?`)){\r\n       return\r\n    }\r\n      \r\n    personService.deletePerson(id).then(response => {\r\n      personService.getAll()\r\n         .then(initialPersons => {\r\n           setPersons(initialPersons)\r\n           setPersonsToShow(initialPersons)\r\n           setMessage(`${name} was deleted`)\r\n           setFilter('')\r\n           setNewName('')\r\n           setNewNumber('')\r\n           setTimeout(() => {\r\n            setMessage(null)\r\n          }, 5000)\r\n        \r\n  })\r\n\r\n    })\r\n\r\n  }\r\n\r\n  const handleChangeName = (event) => {\r\n\r\n    setNewName(event.target.value)\r\n\r\n  }\r\n\r\n  const handleChangeNumber = (event) => {\r\n\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleChangeFilter = (event) => {\r\n    setFilter(event.target.value)\r\n    \r\n    var personsToShowCopy = []\r\n    let i = 0\r\n    for (i=0;i < persons.length; i++){\r\n      const personCopy = {\r\n        name: persons[i].name,\r\n        number: persons[i].number,\r\n        id: persons[i].id\r\n      }\r\n      personsToShowCopy.push(personCopy)\r\n      \r\n    }\r\n    personsToShowCopy=personsToShowCopy.filter(pers => pers.name.toString().toUpperCase().startsWith(event.target.value.toString().toUpperCase()))\r\n    setFilter(event.target.value)\r\n    setPersonsToShow(personsToShowCopy)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={message} />\r\n      <div>filter shown with <input value={filter} onChange={handleChangeFilter}></input></div>\r\n      <h2>Add a new</h2>\r\n      <form onSubmit={addPerson}>\r\n        <div>\r\n  name: <input value={newName} onChange={handleChangeName}/>\r\n        </div>\r\n  number: <input value={newNumber} onChange={handleChangeNumber} />\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n      <ul>\r\n        {personsToShow.map((person, i) => \r\n        <Person key={i} person={person} deletePerson={() => deletePersonOf(person.id, person.name)} />\r\n        )}\r\n      </ul>\r\n    </div>\r\n  )\r\n  \r\n\r\n\r\n\r\n}\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n)\r\n\r\n\r\n"],"sourceRoot":""}